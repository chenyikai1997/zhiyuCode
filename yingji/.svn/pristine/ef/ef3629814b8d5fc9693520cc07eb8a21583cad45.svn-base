<%@ page language="java" contentType="text/html; charset=UTF-8"
		 pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<%
	String path = request.getContextPath();
	String basePath = request.getScheme() + "://"
			+ request.getServerName() + ":" + request.getServerPort()
			+ path + "/";
%>
<!DOCTYPE html>
<html lang="en">
<head>
	<base href="<%=basePath%>">
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>安全隐患管理模块</title>
	<link rel="stylesheet" href="frontend/HK-safe-II/css/index.css">
</head>
<body>

<!-- 1. 头部 -->
<header>
	<h1>安全隐患管理模块</h1>
	<div class="showTime"></div>
</header>

<!-- 2. 主体 -->
<div class="main-box">
	<div class="column-l">
		<!-- 隐患总数 -->
		<div class="panel-t">
			<div id="company-name" class="company-name"></div>
			<div class="panel-tBox">
				<div class="danger-all">
					<img src="frontend/HK-safe-II/images/danger1.png" alt="">
					<p id="dangerNum">0</p>
					<div class="title">隐患总数</div>
				</div>
				<div class="detail">
					<div class="finish">
						<img src="frontend/HK-safe-II/images/danger2.png" alt="">
						<p id="finishNum">0</p>
						<div class="text">
							<span id="green"></span>
							<div class="title">已完成总数</div>
						</div>
					</div>
					<div class="untreated">
						<img src="frontend/HK-safe-II/images/danger3.png" alt="">
						<p id="untreatedNum">0</p>
						<div class="text">
							<span id="yellow"></span>
							<div class="title">未处理总数</div>
						</div>
					</div>
					<div class="overdue">
						<img src="frontend/HK-safe-II/images/danger4.png" alt="">
						<p id="overdueNum">0</p>
						<div class="text">
							<span id="red"></span>
							<div class="title">逾期总数</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<!-- 隐患整改 -->
		<div class="panel-c rectify">
			<h2>隐患整改统计</h2>
			<div class="rectify-chart"></div>
			<div class="panel-footer"></div>
		</div>
	</div>
	<div class="column-c">
		<div class="panel-t">
			<div class="year">
				<p id="danger-Y">0</p>
				<h3>年度隐患</h3>
			</div>
			<div class="quarter">
				<p id="danger-Q">0</p>
				<h3>季度隐患</h3>
			</div>
			<div class="month">
				<p id="danger-M">0</p>
				<h3>月度隐患</h3>
			</div>
		</div>
		<div class="panet-box">
			<div class="panel-c">
				<div class="danger">
					<div class="great">
						<h2>重大隐患</h2>
						<p id="danger-great">0</p>
					</div>
					<!-- <img src="frontend/HK-safe-II/images/danger-ball.jpg" alt=""> -->
					<div class="common">
						<h2>一般隐患</h2>
						<p id="danger-common">0</p>
					</div>
				</div>

			</div>
			<div class="panel-b trend">
				<h2>隐患数量趋势</h2>
				<div class="trend-chart"></div>
				<div class="panel-footer"></div>
			</div>
		</div>
	</div>
	<div class="column-r">
		<!-- <div class="panel-t rectifyAll">
            <h2>二级公司隐患总数</h2>
            <div class="rectifyAll-chart"></div>
            <div class="panel-footer"></div>
        </div>
        <div class="panel-c rectification">
            <h2>二级公司整改率</h2>
            <div class="rectification-chart"></div>
            <div class="panel-footer"></div>
        </div> -->
		<div class="panel-t factor">
			<h2>各隐患因素统计</h2>
			<div class="factor-chart"></div>
			<div class="panel-footer"></div>
		</div>
		<!-- 隐患类别排名 -->
		<div class="panel-b category">
			<h2>各隐患类别排名</h2>
			<div class="category-chart"></div>
			<div class="panel-footer"></div>
		</div>
	</div>
</div>

<!-- 3. 底部 -->
<div class="footer">
	<img src="frontend/HK-safe-II/images/logo.jpg" alt="">
	<h3>智宇科技技术支持</h3>
	<p>联系电话：15501859297</p>
</div>

<script src="frontend/HK-safe-II/js/jquery-3.1.1.min.js"></script>
<script src="frontend/HK-safe-II/js/flexible.js"></script>
<script src="frontend/HK-safe-II/js/echarts.min.js"></script>
<script src="frontend/HK-safe-II/js/echarts-liquidfill.js"></script>
<script src="frontend/HK-safe-II/js/liquid.js"></script>
<script src="frontend/HK-safe-II/js/getTime.js"></script>

<!--头部开始-->
<%@ include file="getDate.jsp"%>
<!--头部结束-->

<script>
	$(function(){

		var ORG_CODE = '${pd.ORG_CODE}';
		// 获取统计总数的数据
		var dangerAllData = dangerAll(ORG_CODE);
		console.log("dangerAllData",dangerAllData)
		//隐患总数，包括逾期，不包括未提交的
		$("#dangerNum").html(dangerAllData.COUNT_ALL);
		//已完成总数，包括逾期
		$("#finishNum").html(dangerAllData.IS_COMPLETE);
		//未处理总数，包括逾期
		$("#untreatedNum").html(dangerAllData.NOT_COMPLETE);
		//逾期总数，不包括未提交的
		$("#overdueNum").html(dangerAllData.OVER_TIME);
		$("#danger-Y").html(dangerAllData.YEAR);
		$("#danger-Q").html(dangerAllData.QUARTER);
		$("#danger-M").html(dangerAllData.MONTH);
		$("#danger-great").html(dangerAllData.ZHONG_DA);
		$("#danger-common").html(dangerAllData.YI_BAN);


		var data = getCompanyName(ORG_CODE);
		$("#company-name").html(data.ORG_NAME_SHORT);
		if(data.ORG_NAME_SHORT == null){
			$("#company-name").html(data.ORG_NAME);
		}


		// 获取隐患整改统计
		var dangerCompleteData = dangerComplete(ORG_CODE, "");
		console.log("dangerCompleteData",dangerCompleteData)
		for (var i = 0; i < dangerCompleteData.dayArray.length; i++) {
			dangerCompleteData.dayArray[i] = dangerCompleteData.dayArray[i].substr(5);
		}
		rectify(dangerCompleteData);


		// 根据隐患类别统计
		var classifyCompleteData = classifyComplete(ORG_CODE);
		category(classifyCompleteData.array);

		// 按隐患因素统计
		var factorCompleteData = factorComplete(ORG_CODE);
		factor(factorCompleteData.array);

		// 隐患数量折线图
		var dangerTrendData = dangerComplete(ORG_CODE,"7");
		trend(dangerTrendData);

		/* $('.column-l p, .column-c p').each(function () {
            //prop设置属性和值
            $(this).prop('Counter',0).animate({
                Counter: $(this).text()
            }, {
                duration: 1000,
                easing: 'swing',
                step: function (now) {
                    console.log("test",now)
                    $(this).text(Math.ceil(now));
                }
            });
        }); */




		$('.column-l p, .column-c p').each(function () {
			$(this).prop('Counter',0).animate({
				Counter: $(this).text()
			}, {
				duration: 1000,
				easing: 'swing',
				step: function (now) {
					$(this).text(Math.ceil(now));
				}
			});
		});
	});

</script>
<script type="text/javascript">
	// 隐患整改柱状图
	function rectify(data){
		// 1. 实例化对象
		var myChart = echarts.init(document.querySelector('.rectify-chart'))
		var app = {}
		const posList = [
			'left',
			'right',
			'top',
			'bottom',
			'inside',
			'insideTop',
			'insideLeft',
			'insideRight',
			'insideBottom',
			'insideTopLeft',
			'insideTopRight',
			'insideBottomLeft',
			'insideBottomRight'
		];
		app.configParameters = {
			rotate: {
				min: -90,
				max: 90
			},
			align: {
				options: {
					left: 'left',
					center: 'center',
					right: 'right'
				}
			},
			verticalAlign: {
				options: {
					top: 'top',
					middle: 'middle',
					bottom: 'bottom'
				}
			},
			position: {
				options: posList.reduce(function (map, pos) {
					map[pos] = pos;
					return map;
				}, {})
			},
			distance: {
				min: 0,
				max: 100
			}
		};
		app.config = {
			rotate: 0,
			align: 'cennter',
			verticalAlign: 'top',
			position: 'top',
			distance: 20,
			onhange: function () {
				const labelOption = {
					rotate: app.config.rotate,
					align: app.config.align,
					verticalAlign: app.config.verticalAlign,
					position: app.config.position,
					distance: app.config.distance
				};
				myChart.setOption({
					series: [
						{
							label: labelOption
						},
						{
							label: labelOption
						},
						{
							label: labelOption
						},
						{
							label: labelOption
						}
					]
				});
			}
		};
		const labelOption = {
			show: false,
			position: app.config.position,
			distance: app.config.distance,
			align: app.config.align,
			verticalAlign: app.config.verticalAlign,
			rotate: app.config.rotate,

			fontSize: 12,
			color: '#fff',
			rich: {
				name: {}
			}
		};

		// 2. 指定配置项和数据
		var option =  {
			color: ["#a0eb7d", "#eb7d7d", "#ebca7d"],
			tooltip: {
				trigger: 'axis',
				axisPointer: {
					type: 'shadow'
				}
			},
			// 修改图标大小
			grid: {
				left: '0',
				top: '15%',
				right: '10%',
				bottom: '0',
				containLabel: true
			},
			legend: {
				barBorderRadius: [10, 10, 0, 0],
				data: [
					{
						name: '整改完成',
						textStyle:{
							color: '#fff'
						}
					},
					{
						name: '正在整改',
						textStyle:{
							color: '#fff'
						}
					},
					{
						name: '整改逾期',
						textStyle:{
							color: '#fff'
						}
					},
					{
						name: '逾期完成',
						textStyle:{
							color: '#fff'
						}
					}
				]
			},
			toolbox: {
				show: true,
				orient: 'vertical',
				left: 'right',
				top: 'center',
				feature: {
					mark: { show: true },
					dataView: { show: true, readOnly: false },
					magicType: { show: true, type: ['line', 'bar', 'stack'] },
					restore: { show: true },
					saveAsImage: { show: true }
				}
			},
			xAxis: [
				{
					type: 'category',
					axisTick: { show: false },
					data: data.dayArray,
					axisLine:{
						lineStyle:{
							color: '#fff'
						}
					},
				},
			],
			yAxis: [
				{
					type: 'value',
					axisLine:{
						lineStyle:{
							color: '#fff'
						}
					},
					// 修改y轴分割线的颜色
					splitLine: {
						lineStyle: {
							color: "#012f4a"
						}
					}
				}
			],
			series: [
				{
					name: '整改完成',
					type: 'bar',
					label: labelOption,
					emphasis: {
						focus: 'series'
					},
					data: data.finishArray,
					itemStyle: {
						barBorderRadius: [5, 5, 0, 0]
					}
				},
				{
					name: '正在整改',
					type: 'bar',
					label: labelOption,
					emphasis: {
						focus: 'series'
					},
					data: data.unfinishArray,
					itemStyle: {
						barBorderRadius: [5, 5, 0, 0]
					}
				},
				{
					name: '整改逾期',
					type: 'bar',
					label: labelOption,
					emphasis: {
						focus: 'series'
					},
					data: data.overdueArray,
					itemStyle: {
						barBorderRadius: [5, 5, 0, 0]
					}
				},
				{
					name: '逾期完成',
					type: 'bar',
					label: labelOption,
					emphasis: {
						focus: 'series'
					},
					data: data.overFinishArray,
					itemStyle: {
						barBorderRadius: [5, 5, 0, 0]
					}
				}
			]
		};
		/* for(var i = 0; i < data.finish.length; i++){
          option.series[0].data.push(data.finish[i].value)
        };
        for(var i = 0; i < data.unfinish.length; i++){
          option.series[1].data.push(data.unfinish[i].value)
        };
        for(var i = 0; i < data.overdue.length; i++){
          option.series[2].data.push(data.overdue[i].value)
        }; */
		// 3. 把配置项给实例对象
		myChart.setOption(option)
		// 4.跟随屏幕自适应
		window.addEventListener("resize", function() {
			myChart.resize({animation: {duration:1000}});
		})
	}
</script>
<script>
	// 隐患排名饼图
	function category(data){
		// 1. 实例化对象
		var myChart = echarts.init(document.querySelector('.category .category-chart'))

		// 2. 指定配置项和数据
		option = {
			title: {
				left: 'center'
			},
			tooltip: {
				trigger: 'item'
			},
			legend: {
				show: false,
				orient: 'horizontal',
				top: '0',
				textStyle: {
					color: '#fff'
				}
			},
			series: [
				{
					name: '各隐患类别排名',
					type: 'pie',
					radius: '60%',
					center: ['50%', '50%'],
					label: {
						normal : {
							formatter: '{b}: ({d}%)',
							textStyle:{
								fontWeight : 'normal',
								fontSize : 10,
								color: '#fff',
							}
						}
					},
					data: [],
					emphasis: {
						itemStyle: {
							shadowBlur: 10,
							shadowOffsetX: 0,
							shadowColor: 'rgba(0, 0, 0, 0.5)'
						}
					}
				}
			]
		};
		for(var i = 0; i < data.length; i++){
			option.series[0].data.push(data[i])
		}
		// 3. 把配置项给实例对象
		myChart.setOption(option)
		// 4.跟随屏幕自适应
		window.addEventListener("resize", function() {
			myChart.resize({animation: {duration:1000}});
		})
	}

	// 隐患因素饼图
	function factor(data){
		// 1. 实例化对象
		var myChart = echarts.init(document.querySelector('.factor .factor-chart'))
		// 2. 指定配置项和数据
		option = {
			tooltip: {
				trigger: 'item',
			},
			legend: {
				top: '0%',
				left: 'center',
				textStyle: {
					color: '#fff',
				}
			},
			series: [
				{
					name: '各隐患隐患因素统计',
					type: 'pie',
					center: ['50%', '60%'],
					radius: ['40%', '80%'],
					avoidLabelOverlap: false,
					itemStyle: {
						borderRadius: 10,
					},
					label: {
						show: false,
						position: 'center'
					},
					emphasis: {
						label: {
							show: true,
							fontSize: 34,
							fontWeight: 'bold',
							color: '#fff',
						}
					},
					labelLine: {
						show: false
					},
					data: data
				}
			]
		};
		// 3. 把配置项给实例对象
		myChart.setOption(option)
		// 4.跟随屏幕自适应
		window.addEventListener("resize", function() {
			myChart.resize({animation: {duration:1000}});
		})
	}

	// 隐患趋势折线图
	function trend(data){
		// 1. 实例化对象
		var myChart = echarts.init(document.querySelector('.trend .trend-chart'))
		// 2. 指定配置项和数据
		option = {
			tooltip: {
				trigger: "axis",
				axisPointer: {
					lineStyle: {
						color: "#dddc6b"
					}
				}
			},
			legend: {
				top: "top",
				textStyle: {
					color: "rgba(255,255,255,.5)",
					fontSize: "12"
				}
			},
			grid: {
				left: "10",
				top: "30",
				right: "40",
				bottom: "0",
				containLabel: true
			},

			xAxis: [
				{
					type: "category",
					boundaryGap: false,
					axisLabel: {
						textStyle: {
							color: "rgba(255,255,255,.6)",
							fontSize: 12
						}
					},
					axisLine: {
						lineStyle: {
							color: "rgba(255,255,255,.2)"
						}
					},

					data: data.dayArray
				},
				{
					axisPointer: { show: false },
					axisLine: { show: false },
					position: "bottom",
					offset: 20
				}
			],

			yAxis: [
				{
					type: "value",
					axisTick: { show: false },
					axisLine: {
						lineStyle: {
							color: "rgba(255,255,255,.1)"
						}
					},
					axisLabel: {
						textStyle: {
							color: "rgba(255,255,255,.6)",
							fontSize: 12
						}
					},

					splitLine: {
						lineStyle: {
							color: "rgba(255,255,255,.1)"
						}
					}
				}
			],
			series: [
				{
					name: "整改完成",
					type: "line",
					smooth: true,
					symbol: "circle",
					symbolSize: 5,
					showSymbol: false,
					lineStyle: {
						normal: {
							color: "#0184d5",
							width: 2
						}
					},
					areaStyle: {
						normal: {
							color: new echarts.graphic.LinearGradient(
									0,
									0,
									0,
									1,
									[
										{
											offset: 0,
											color: "rgba(1, 132, 213, 0.4)"
										},
										{
											offset: 0.8,
											color: "rgba(1, 132, 213, 0.1)"
										}
									],
									false
							),
							shadowColor: "rgba(0, 0, 0, 0.1)"
						}
					},
					itemStyle: {
						normal: {
							color: "#0184d5",
							borderColor: "rgba(221, 220, 107, .1)",
							borderWidth: 12
						}
					},
					data: data.finishArray
				},
				{
					name: "正在整改",
					type: "line",
					smooth: true,
					symbol: "circle",
					symbolSize: 5,
					showSymbol: false,
					lineStyle: {
						normal: {
							color: "#00d887",
							width: 2
						}
					},
					areaStyle: {
						normal: {
							color: new echarts.graphic.LinearGradient(
									0,
									0,
									0,
									1,
									[
										{
											offset: 0,
											color: "rgba(0, 216, 135, 0.4)"
										},
										{
											offset: 0.8,
											color: "rgba(0, 216, 135, 0.1)"
										}
									],
									false
							),
							shadowColor: "rgba(0, 0, 0, 0.1)"
						}
					},
					itemStyle: {
						normal: {
							color: "#00d887",
							borderColor: "rgba(221, 220, 107, .1)",
							borderWidth: 12
						}
					},
					data: data.unfinishArray
				},
				{
					name: "整改逾期",
					type: "line",
					smooth: true,
					symbol: "circle",
					symbolSize: 5,
					showSymbol: false,
					lineStyle: {
						normal: {
							color: "#00d887",
							width: 2
						}
					},
					areaStyle: {
						normal: {
							color: new echarts.graphic.LinearGradient(
									0,
									0,
									0,
									1,
									[
										{
											offset: 0,
											color: "rgba(0, 216, 135, 0.4)"
										},
										{
											offset: 0.8,
											color: "rgba(0, 216, 135, 0.1)"
										}
									],
									false
							),
							shadowColor: "rgba(0, 0, 0, 0.1)"
						}
					},
					itemStyle: {
						normal: {
							color: "#001dd8",
							borderColor: "rgba(221, 220, 107, .1)",
							borderWidth: 12
						}
					},
					data: data.overdueArray
				},
				{
					name: "逾期完成",
					type: "line",
					smooth: true,
					symbol: "circle",
					symbolSize: 5,
					showSymbol: false,
					lineStyle: {
						normal: {
							color: "#00d887",
							width: 2
						}
					},
					areaStyle: {
						normal: {
							color: new echarts.graphic.LinearGradient(
									0,
									0,
									0,
									1,
									[
										{
											offset: 0,
											color: "rgba(0, 216, 135, 0.4)"
										},
										{
											offset: 0.8,
											color: "rgba(0, 216, 135, 0.1)"
										}
									],
									false
							),
							shadowColor: "rgba(0, 0, 0, 0.1)"
						}
					},
					itemStyle: {
						normal: {
							color: "#9bd800",
							borderColor: "rgba(221, 220, 107, .1)",
							borderWidth: 12
						}
					},
					data: data.overFinishArray
				}
			]
		};
		// 3. 把配置项给实例对象
		myChart.setOption(option);
		// 4.跟随屏幕自适应
		window.addEventListener("resize", function() {
			myChart.resize({animation: {duration:1000}});
		});
	}
</script>


</body>
</html>